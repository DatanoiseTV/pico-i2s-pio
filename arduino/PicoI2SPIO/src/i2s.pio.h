// -------------------------------------------------- //
// This file is autogenerated by pioasm; do not edit! //
// -------------------------------------------------- //

#pragma once

#if !PICO_NO_HARDWARE
#include "hardware/pio.h"
#endif

// -------- //
// i2s_mclk //
// -------- //

#define i2s_mclk_wrap_target 0
#define i2s_mclk_wrap 1

static const uint16_t i2s_mclk_program_instructions[] = {
            //     .wrap_target
    0xe000, //  0: set    pins, 0                    
    0xe001, //  1: set    pins, 1                    
            //     .wrap
};

#if !PICO_NO_HARDWARE
static const struct pio_program i2s_mclk_program = {
    .instructions = i2s_mclk_program_instructions,
    .length = 2,
    .origin = -1,
};

static inline pio_sm_config i2s_mclk_program_get_default_config(uint offset) {
    pio_sm_config c = pio_get_default_sm_config();
    sm_config_set_wrap(&c, offset + i2s_mclk_wrap_target, offset + i2s_mclk_wrap);
    return c;
}
#endif

// -------- //
// i2s_data //
// -------- //

#define i2s_data_wrap_target 0
#define i2s_data_wrap 11

static const uint16_t i2s_data_program_instructions[] = {
            //     .wrap_target
    0x90a0, //  0: pull   block           side 2     
    0x6001, //  1: out    pins, 1         side 0     
    0xf03d, //  2: set    x, 29           side 2     
    0x6001, //  3: out    pins, 1         side 0     
    0x1043, //  4: jmp    x--, 3          side 2     
    0x6801, //  5: out    pins, 1         side 1     
    0x98a0, //  6: pull   block           side 3     
    0x6801, //  7: out    pins, 1         side 1     
    0xf83d, //  8: set    x, 29           side 3     
    0x6801, //  9: out    pins, 1         side 1     
    0x1849, // 10: jmp    x--, 9          side 3     
    0x6001, // 11: out    pins, 1         side 0     
            //     .wrap
};

#if !PICO_NO_HARDWARE
static const struct pio_program i2s_data_program = {
    .instructions = i2s_data_program_instructions,
    .length = 12,
    .origin = -1,
};

static inline pio_sm_config i2s_data_program_get_default_config(uint offset) {
    pio_sm_config c = pio_get_default_sm_config();
    sm_config_set_wrap(&c, offset + i2s_data_wrap_target, offset + i2s_data_wrap);
    sm_config_set_sideset(&c, 2, false, false);
    return c;
}
#endif

// ---------- //
// i2s_pt8211 //
// ---------- //

#define i2s_pt8211_wrap_target 0
#define i2s_pt8211_wrap 11

static const uint16_t i2s_pt8211_program_instructions[] = {
            //     .wrap_target
    0x91a0, //  0: pull   block           side 2 [1] 
    0x6901, //  1: out    pins, 1         side 1 [1] 
    0xf92d, //  2: set    x, 13           side 3 [1] 
    0x6901, //  3: out    pins, 1         side 1 [1] 
    0x1943, //  4: jmp    x--, 3          side 3 [1] 
    0x6901, //  5: out    pins, 1         side 1 [1] 
    0x99a0, //  6: pull   block           side 3 [1] 
    0x6101, //  7: out    pins, 1         side 0 [1] 
    0xf12d, //  8: set    x, 13           side 2 [1] 
    0x6101, //  9: out    pins, 1         side 0 [1] 
    0x1149, // 10: jmp    x--, 9          side 2 [1] 
    0x6101, // 11: out    pins, 1         side 0 [1] 
            //     .wrap
};

#if !PICO_NO_HARDWARE
static const struct pio_program i2s_pt8211_program = {
    .instructions = i2s_pt8211_program_instructions,
    .length = 12,
    .origin = -1,
};

static inline pio_sm_config i2s_pt8211_program_get_default_config(uint offset) {
    pio_sm_config c = pio_get_default_sm_config();
    sm_config_set_wrap(&c, offset + i2s_pt8211_wrap_target, offset + i2s_pt8211_wrap);
    sm_config_set_sideset(&c, 2, false, false);
    return c;
}
#endif

// -------- //
// i2s_exdf //
// -------- //

#define i2s_exdf_wrap_target 0
#define i2s_exdf_wrap 11

static const uint16_t i2s_exdf_program_instructions[] = {
            //     .wrap_target
    0x9da0, //  0: pull   block           side 7 [1] 
    0x6102, //  1: out    pins, 2         side 0 [1] 
    0xf92d, //  2: set    x, 13           side 6 [1] 
    0x6102, //  3: out    pins, 2         side 0 [1] 
    0x1943, //  4: jmp    x--, 3          side 6 [1] 
    0x6102, //  5: out    pins, 2         side 0 [1] 
    0x99a0, //  6: pull   block           side 6 [1] 
    0x6502, //  7: out    pins, 2         side 1 [1] 
    0xfd2d, //  8: set    x, 13           side 7 [1] 
    0x6502, //  9: out    pins, 2         side 1 [1] 
    0x1d49, // 10: jmp    x--, 9          side 7 [1] 
    0x6502, // 11: out    pins, 2         side 1 [1] 
            //     .wrap
};

#if !PICO_NO_HARDWARE
static const struct pio_program i2s_exdf_program = {
    .instructions = i2s_exdf_program_instructions,
    .length = 12,
    .origin = -1,
};

static inline pio_sm_config i2s_exdf_program_get_default_config(uint offset) {
    pio_sm_config c = pio_get_default_sm_config();
    sm_config_set_wrap(&c, offset + i2s_exdf_wrap_target, offset + i2s_exdf_wrap);
    sm_config_set_sideset(&c, 3, false, false);
    return c;
}
#endif

// ------------- //
// i2s_data_dual //
// ------------- //

#define i2s_data_dual_wrap_target 0
#define i2s_data_dual_wrap 23

static const uint16_t i2s_data_dual_program_instructions[] = {
            //     .wrap_target
    0x90a0, //  0: pull   block           side 2     
    0x6002, //  1: out    pins, 2         side 0     
    0xf02d, //  2: set    x, 13           side 2     
    0x6002, //  3: out    pins, 2         side 0     
    0x1043, //  4: jmp    x--, 3          side 2     
    0x6002, //  5: out    pins, 2         side 0     
    0x90a0, //  6: pull   block           side 2     
    0x6002, //  7: out    pins, 2         side 0     
    0xf02d, //  8: set    x, 13           side 2     
    0x6002, //  9: out    pins, 2         side 0     
    0x1049, // 10: jmp    x--, 9          side 2     
    0x6802, // 11: out    pins, 2         side 1     
    0x98a0, // 12: pull   block           side 3     
    0x6802, // 13: out    pins, 2         side 1     
    0xf82d, // 14: set    x, 13           side 3     
    0x6802, // 15: out    pins, 2         side 1     
    0x184f, // 16: jmp    x--, 15         side 3     
    0x6802, // 17: out    pins, 2         side 1     
    0x98a0, // 18: pull   block           side 3     
    0x6802, // 19: out    pins, 2         side 1     
    0xf82d, // 20: set    x, 13           side 3     
    0x6802, // 21: out    pins, 2         side 1     
    0x1855, // 22: jmp    x--, 21         side 3     
    0x6002, // 23: out    pins, 2         side 0     
            //     .wrap
};

#if !PICO_NO_HARDWARE
static const struct pio_program i2s_data_dual_program = {
    .instructions = i2s_data_dual_program_instructions,
    .length = 24,
    .origin = -1,
};

static inline pio_sm_config i2s_data_dual_program_get_default_config(uint offset) {
    pio_sm_config c = pio_get_default_sm_config();
    sm_config_set_wrap(&c, offset + i2s_data_dual_wrap_target, offset + i2s_data_dual_wrap);
    sm_config_set_sideset(&c, 2, false, false);
    return c;
}
#endif

// --------------- //
// i2s_pt8211_dual //
// --------------- //

#define i2s_pt8211_dual_wrap_target 0
#define i2s_pt8211_dual_wrap 23

static const uint16_t i2s_pt8211_dual_program_instructions[] = {
            //     .wrap_target
    0x91a0, //  0: pull   block           side 2 [1] 
    0x6902, //  1: out    pins, 2         side 1 [1] 
    0xf925, //  2: set    x, 5            side 3 [1] 
    0x6902, //  3: out    pins, 2         side 1 [1] 
    0x1943, //  4: jmp    x--, 3          side 3 [1] 
    0x6902, //  5: out    pins, 2         side 1 [1] 
    0x99a0, //  6: pull   block           side 3 [1] 
    0x6902, //  7: out    pins, 2         side 1 [1] 
    0xf925, //  8: set    x, 5            side 3 [1] 
    0x6902, //  9: out    pins, 2         side 1 [1] 
    0x1949, // 10: jmp    x--, 9          side 3 [1] 
    0x6902, // 11: out    pins, 2         side 1 [1] 
    0x99a0, // 12: pull   block           side 3 [1] 
    0x6102, // 13: out    pins, 2         side 0 [1] 
    0xf125, // 14: set    x, 5            side 2 [1] 
    0x6102, // 15: out    pins, 2         side 0 [1] 
    0x114f, // 16: jmp    x--, 15         side 2 [1] 
    0x6102, // 17: out    pins, 2         side 0 [1] 
    0x91a0, // 18: pull   block           side 2 [1] 
    0x6102, // 19: out    pins, 2         side 0 [1] 
    0xf125, // 20: set    x, 5            side 2 [1] 
    0x6102, // 21: out    pins, 2         side 0 [1] 
    0x1155, // 22: jmp    x--, 21         side 2 [1] 
    0x6102, // 23: out    pins, 2         side 0 [1] 
            //     .wrap
};

#if !PICO_NO_HARDWARE
static const struct pio_program i2s_pt8211_dual_program = {
    .instructions = i2s_pt8211_dual_program_instructions,
    .length = 24,
    .origin = -1,
};

static inline pio_sm_config i2s_pt8211_dual_program_get_default_config(uint offset) {
    pio_sm_config c = pio_get_default_sm_config();
    sm_config_set_wrap(&c, offset + i2s_pt8211_dual_wrap_target, offset + i2s_pt8211_dual_wrap);
    sm_config_set_sideset(&c, 2, false, false);
    return c;
}
#endif

